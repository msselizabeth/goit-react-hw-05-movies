{"version":3,"file":"static/js/266.ae4b304e.chunk.js","mappings":"sMA6BA,UAzBa,WAET,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,mBAAkBH,GACbI,MAAK,SAAAJ,GAAM,OAAIC,EAAUD,EAAOK,QAArB,IACXC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAME,eAAxB,GACnB,GAAE,CAACT,IAEH,IAAMU,GAAWC,EAAAA,EAAAA,MAElB,OACA,6BACQ,mDACA,wBAAKX,EAAOY,KAAI,SAAAC,GACZ,OACC,yBAAmB,SAAC,EAAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SAA6DG,EAAMM,SAA7EN,EAAMG,GAEnB,QAKZ,C,8NC5BD,IAAMI,EAAW,gCACXC,EAAM,mCAEClB,EAAoB,SAACH,GAC9B,OAAOsB,MAAM,GAAD,OAAIF,EAAJ,sCAA0CC,IACjDjB,MAAK,SAAAmB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKd,gBAEzB,OAAOc,EAAKG,MACf,GAER,EAEYC,EAAkB,SAACC,GAC5B,OAAON,MAAM,GAAD,OAAIF,EAAJ,iBAAqBQ,EAArB,oBAAwCP,IAC/CjB,MAAK,SAAAmB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKd,gBAEzB,OAAOc,EAAKG,MACf,GACR,EAEYG,EAAgB,SAACD,GAC1B,OAAON,MAAM,GAAD,OAAIF,EAAJ,iBAAqBQ,EAArB,4BAAgDP,IACvDjB,MAAK,SAAAmB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKd,gBAEzB,OAAOc,EAAKG,MACf,GACR,EAEYI,EAAkB,SAACF,GAC5B,OAAON,MAAM,GAAD,OAAIF,EAAJ,iBAAqBQ,EAArB,4BAAgDP,IACvDjB,MAAK,SAAAmB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKd,gBAEzB,OAAOc,EAAKG,MACf,GACR,EAEYK,EAAiB,SAACC,GAC3B,OAAOV,MAAM,GAAD,OAAIF,EAAJ,gCAAoCC,EAApC,kBAAiDW,IACxD5B,MAAK,SAAAmB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKd,gBAEzB,OAAOc,EAAKG,MACf,GACR,C","sources":["pages/Home.js","services/MoviesAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getTrendingMovies } from 'services/MoviesAPI';\n\nconst Home = () => {\n     \n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        getTrendingMovies(movies)\n            .then(movies => setMovies(movies.results))\n            .catch(error => console.error(error.status_message))\n    }, [movies])\n\n     const location = useLocation();\n\n    return (\n    <main>\n            <h1>Trending today Movies</h1> \n            <ul>{movies.map(movie => {\n                return (\n                 <li key={movie.id}><Link to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title}</Link></li>\n                )\n            })}\n            </ul>\n            \n    </main>\n)\n}\nexport default Home;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '9aeb3f25134c39d746b22e1322fdcd2c';\n\nexport const getTrendingMovies = (movies) => {\n    return fetch(`${BASE_URL}trending/movie/day?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n       \n}\n\nexport const getDetailsMovie = (movieID) => {\n    return fetch(`${BASE_URL}movie/${movieID}?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}\n\nexport const getCastsMovie = (movieID) => {\n    return fetch(`${BASE_URL}movie/${movieID}/credits?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}\n\nexport const getReviewsMovie = (movieID) => {\n    return fetch(`${BASE_URL}movie/${movieID}/reviews?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}\n\nexport const getSearchMovie = (query) => {\n    return fetch(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}"],"names":["useState","movies","setMovies","useEffect","getTrendingMovies","then","results","catch","error","console","status_message","location","useLocation","map","movie","Link","to","id","state","from","title","BASE_URL","KEY","fetch","resp","ok","Error","json","getDetailsMovie","movieID","getCastsMovie","getReviewsMovie","getSearchMovie","query"],"sourceRoot":""}