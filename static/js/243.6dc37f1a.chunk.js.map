{"version":3,"file":"static/js/243.6dc37f1a.chunk.js","mappings":"iQAGaA,EAAkBC,EAAAA,GAAAA,IAAH,wEAMfC,EAAQD,EAAAA,GAAAA,IAAH,4DAKLE,EAAkBF,EAAAA,GAAAA,GAAH,iHAOfG,EAAwBH,EAAAA,GAAAA,IAAH,qDAKrBI,EAA0BJ,EAAAA,GAAAA,IAAH,iDAIvBK,GAAUL,EAAAA,EAAAA,IAAOM,EAAAA,KAAPN,CAAH,mO,SC6BpB,EArDqB,WAAO,IAAD,EACvB,GAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAASC,EAAAA,EAAAA,MAETC,EAAI,WADOC,EAAAA,EAAAA,MACKC,aAAZ,aAAG,EAAgBC,MAE7BC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,iBAAgBP,EAAOQ,SAClBC,MAAK,SAAAX,GAAI,OAAIC,EAAQD,EAAZ,IACTY,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACjB,GAAE,CAACX,IAEJ,IAAMc,EAAQhB,EAAKiB,QAAUjB,EAAKiB,OAAOC,KAAI,SAAAF,GAAK,OAAIA,EAAMG,IAAV,IAAgBC,KAAK,KAEvE,OACI,UAACzB,EAAD,YACI,SAACE,EAAD,CAASwB,GAAIjB,EAAb,sBACA,UAACb,EAAD,YACI,SAACE,EAAD,CAAO6B,IAAG,yCAAoCtB,EAAKuB,aAAeC,IAAKxB,EAAKyB,kBAChF,UAAC/B,EAAD,YACI,2BACI,wBAAKM,EAAKyB,kBACV,uBAAIzB,EAAK0B,mBAEb,yBACI,wCAAgB1B,EAAK2B,WAAa,IAAlC,UAEJ,2BACI,sCACA,uBAAI3B,EAAK4B,eAEb,2BACI,oCACA,uBAAIZ,cAKZ,UAACpB,EAAD,YACI,oDACJ,2BACI,yBAAI,SAAC,EAAAE,KAAD,CAAMuB,GAAI,OAAQf,MAAO,CAAEC,KAAMH,GAAjC,sBACJ,yBAAI,SAAC,EAAAN,KAAD,CAAMuB,GAAI,UAAWf,MAAO,CAAEC,KAAMH,GAApC,gCAGR,SAAC,EAAAyB,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAKf,C,8NCzDD,IAAMC,EAAW,gCACXC,EAAM,mCAECC,EAAoB,SAACC,GAC9B,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,sCAA0CC,IACjDrB,MAAK,SAAAyB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKG,gBAEzB,OAAOH,EAAKI,MACf,GAER,EAEY/B,EAAkB,SAACgC,GAC5B,OAAON,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBU,EAArB,oBAAwCT,IAC/CrB,MAAK,SAAAyB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKG,gBAEzB,OAAOH,EAAKI,MACf,GACR,EAEYE,EAAgB,SAACD,GAC1B,OAAON,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBU,EAArB,4BAAgDT,IACvDrB,MAAK,SAAAyB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKG,gBAEzB,OAAOH,EAAKI,MACf,GACR,EAEYG,EAAkB,SAACF,GAC5B,OAAON,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBU,EAArB,4BAAgDT,IACvDrB,MAAK,SAAAyB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKG,gBAEzB,OAAOH,EAAKI,MACf,GACR,EAEYI,EAAiB,SAACC,GAC3B,OAAOV,MAAM,GAAD,OAAIJ,EAAJ,gCAAoCC,EAApC,kBAAiDa,IACxDlC,MAAK,SAAAyB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKG,gBAEzB,OAAOH,EAAKI,MACf,GACR,C","sources":["pages/MovieDetails.syled.js","pages/MovieDetails.js","services/MoviesAPI.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BoxMovieDetails = styled.div`\n  display: flex;\n  justify-content: center;\n\n`\n\nexport const Image = styled.img`\n   width: 300px;\n   height: 400px\n`\n\nexport const DescriptionList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    margin-left: 20px;\n`\n\nexport const MovieDetailsContainer = styled.div`\n   \n     margin-top: 30px;\n`\n\nexport const BoxAdditionalInfomation = styled.div`\n    margin-top: 30px;\n\n`\nexport const BackBtn = styled(Link)`\n  display: inline-block;\n  padding: 3px;\n  text-align: center;\n  text-decoration: none;\n  border: 1px solid black;\n  color: blue;\n  font-size: 18px;\n  border-radius: 5px;\n  margin-bottom: 15px;\n`;","import { Suspense, useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { getDetailsMovie } from \"services/MoviesAPI\";\nimport { BoxAdditionalInfomation, BoxMovieDetails, DescriptionList, BackBtn, Image, MovieDetailsContainer } from \"./MovieDetails.syled\";\n\n\nconst MovieDetails = () => {\n    const [film, setFilm] = useState('');\n    const params = useParams();\n    const location = useLocation();\n    const back = location.state?.from;\n    \n    useEffect(() => {\n        getDetailsMovie(params.movieId)\n            .then(film => setFilm(film))\n            .catch(err => console.error(err))\n    }, [params])\n\n    const genre = film.genres && film.genres.map(genre => genre.name).join(',');\n\n    return (\n        <MovieDetailsContainer>\n            <BackBtn to={back}>Go back</BackBtn>\n            <BoxMovieDetails>\n                <Image src={`https://image.tmdb.org/t/p/w500${film.poster_path}`} alt={film.original_title} />\n            <DescriptionList>\n                <li>\n                    <h1>{film.original_title}</h1>\n                    <p>{film.release_date}</p>\n                </li>\n                <li>\n                    <p>User score: {film.vote_count / 100}%</p>\n                </li>\n                <li>\n                    <h2>Overview</h2>\n                    <p>{film.overview}</p>\n                </li>\n                <li>\n                    <h3>Genres</h3>\n                    <p>{genre}</p>\n                </li>\n            </DescriptionList>\n            </BoxMovieDetails>\n            \n            <BoxAdditionalInfomation>\n                <h4>Additional information</h4>\n            <ul>\n                <li><Link to={'cast'} state={{ from: back }}>Casts</Link></li>\n                <li><Link to={'reviews'} state={{ from: back }}> Reviews </Link></li>\n            </ul>\n            </BoxAdditionalInfomation>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet/>\n            </Suspense>\n            \n        </MovieDetailsContainer>\n    )\n}\n\nexport default MovieDetails;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '9aeb3f25134c39d746b22e1322fdcd2c';\n\nexport const getTrendingMovies = (movies) => {\n    return fetch(`${BASE_URL}trending/movie/day?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n       \n}\n\nexport const getDetailsMovie = (movieID) => {\n    return fetch(`${BASE_URL}movie/${movieID}?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}\n\nexport const getCastsMovie = (movieID) => {\n    return fetch(`${BASE_URL}movie/${movieID}/credits?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}\n\nexport const getReviewsMovie = (movieID) => {\n    return fetch(`${BASE_URL}movie/${movieID}/reviews?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}\n\nexport const getSearchMovie = (query) => {\n    return fetch(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}"],"names":["BoxMovieDetails","styled","Image","DescriptionList","MovieDetailsContainer","BoxAdditionalInfomation","BackBtn","Link","useState","film","setFilm","params","useParams","back","useLocation","state","from","useEffect","getDetailsMovie","movieId","then","catch","err","console","error","genre","genres","map","name","join","to","src","poster_path","alt","original_title","release_date","vote_count","overview","Suspense","fallback","BASE_URL","KEY","getTrendingMovies","movies","fetch","resp","ok","Error","status_message","json","movieID","getCastsMovie","getReviewsMovie","getSearchMovie","query"],"sourceRoot":""}