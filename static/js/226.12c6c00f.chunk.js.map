{"version":3,"file":"static/js/226.12c6c00f.chunk.js","mappings":"0NAqBA,EAjBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAEdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACGG,EAAMM,kBAFFN,EAAMG,GADA,KAStB,ECND,EAXmB,SAAC,GAAyB,IAAxBI,EAAuB,EAAvBA,kBAEjB,OACI,kBAAMC,SAAUD,EAAhB,WACI,kBAAOE,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,sBAIX,E,kBC+BD,EApCe,WAAO,IAAD,EAEjB,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACc,KAAhBF,IAIJG,EAAAA,EAAAA,gBAAeH,GACVI,MAAK,SAAAxB,GAAM,OAAIA,GAAUgB,EAAUhB,EAAOyB,QAA/B,IACXC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAME,eAAxB,GAEnB,GAAE,CAACT,IAaJ,OACI,gCACI,SAAC,EAAD,CAAYT,kBAbM,SAAAmB,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,cAAcD,MAAME,MAEvC,GAAqB,KAAjBF,EAAMG,OACV,OAAOhB,EAAgB,CAAC,GAGrBA,EAAgB,CAAEa,MAAAA,GAC1B,IAKUZ,IAAe,SAAC,EAAD,CAAYpB,OAAQA,MAG/C,C,8NCxCD,IAAMoC,EAAW,gCACXC,EAAM,mCAECC,EAAoB,SAACtC,GAC9B,OAAOuC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CC,IACjDb,MAAK,SAAAgB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKX,gBAEzB,OAAOW,EAAKG,MACf,GAER,EAEYC,EAAkB,SAACC,GAC5B,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,oBAAwCR,IAC/Cb,MAAK,SAAAgB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKX,gBAEzB,OAAOW,EAAKG,MACf,GACR,EAEYG,EAAgB,SAACD,GAC1B,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,4BAAgDR,IACvDb,MAAK,SAAAgB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKX,gBAEzB,OAAOW,EAAKG,MACf,GACR,EAEYI,EAAkB,SAACF,GAC5B,OAAON,MAAM,GAAD,OAAIH,EAAJ,iBAAqBS,EAArB,4BAAgDR,IACvDb,MAAK,SAAAgB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKX,gBAEzB,OAAOW,EAAKG,MACf,GACR,EAEYpB,EAAiB,SAACS,GAC3B,OAAOO,MAAM,GAAD,OAAIH,EAAJ,gCAAoCC,EAApC,kBAAiDL,IACxDR,MAAK,SAAAgB,GACF,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKX,gBAEzB,OAAOW,EAAKG,MACf,GACR,C","sources":["components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.js","pages/Movies.js","services/MoviesAPI.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n\nconst MoviesList = ({ movies }) => {\n\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};","import { PropTypes } from 'prop-types';\n\nconst SearchForm = ({handleMovieSubmit}) => {\n\n    return (\n        <form onSubmit={handleMovieSubmit}>\n            <input type=\"text\" name=\"query\"/>\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n\n}\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  handleMovieSubmit: PropTypes.func.isRequired,\n};","import MoviesList from \"components/MoviesList/MoviesList\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getSearchMovie } from \"services/MoviesAPI\";\n\nconst Movies = () => {\n    \n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchQuery = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n        if (searchQuery === '')\n        {\n            return;\n        }\n        getSearchMovie(searchQuery)\n            .then(movies => movies && setMovies(movies.results))\n            .catch(error => console.error(error.status_message));\n    \n    }, [searchQuery])\n    \n    const handleMovieSubmit = e => {\n           e.preventDefault();\n           const query = e.currentTarget.query.value;\n\n        if (query.trim() === '') {\n        return setSearchParams({});\n        }\n\n           setSearchParams({ query });\n  };\n    \n    return (\n        <section>\n            <SearchForm handleMovieSubmit={handleMovieSubmit} />\n            {searchQuery && <MoviesList movies={movies} />}\n        </section>\n    )\n}\n\nexport default Movies;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '9aeb3f25134c39d746b22e1322fdcd2c';\n\nexport const getTrendingMovies = (movies) => {\n    return fetch(`${BASE_URL}trending/movie/day?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n       \n}\n\nexport const getDetailsMovie = (movieID) => {\n    return fetch(`${BASE_URL}movie/${movieID}?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}\n\nexport const getCastsMovie = (movieID) => {\n    return fetch(`${BASE_URL}movie/${movieID}/credits?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}\n\nexport const getReviewsMovie = (movieID) => {\n    return fetch(`${BASE_URL}movie/${movieID}/reviews?api_key=${KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}\n\nexport const getSearchMovie = (query) => {\n    return fetch(`${BASE_URL}search/movie?api_key=${KEY}&query=${query}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status_message);\n            }\n            return resp.json();\n        })\n}"],"names":["movies","location","useLocation","map","movie","Link","to","id","state","from","original_title","handleMovieSubmit","onSubmit","type","name","useState","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","getSearchMovie","then","results","catch","error","console","status_message","e","preventDefault","query","currentTarget","value","trim","BASE_URL","KEY","getTrendingMovies","fetch","resp","ok","Error","json","getDetailsMovie","movieID","getCastsMovie","getReviewsMovie"],"sourceRoot":""}